;******************************************************************************
;*** 
;******************************************************************************
; This differs from Iron Curtain in that IC deploys a timed infinite-strength shield. 
: Like Iron Curtain, 
; Tier I: Deploys a shield 
; Tier II: Deploys a shield around itself. 
; Tier II: Deploys a shield at nodes. 
; Tier III: Deploys a shield anywhere. 

;------------------------------------------------------------------------------
[BuildingTypes]
+				= UN




[SOMETECHNO]                                ; TechnoType
ShieldType=SOMESHIELDTYPE                   ; ShieldType; none by default

; FireShield Maker
[ProtonShield]                               ; WarheadType
Shield.Penetrate=false                      ; boolean
Shield.Break=false                          ; boolean
Shield.BreakAnim=                           ; Animation
Shield.HitAnim=                             ; Animation
Shield.BreakWeapon=                         ; WeaponType
Shield.AbsorbPercent=                       ; floating point value
Shield.PassPercent=                         ; floating point value
Shield.ReceivedDamage.Minimum=              ; integer
Shield.ReceivedDamage.Maximum=              ; integer
Shield.Respawn.Duration=0                   ; integer, game frames
Shield.Respawn.Amount=0.0                   ; floating point value, percents or absolute
Shield.Respawn.Rate=-1.0                    ; floating point value, ingame minutes
Shield.Respawn.RestartTimer=false           ; boolean
Shield.SelfHealing.Duration=0               ; integer, game frames
Shield.SelfHealing.Amount=0.0               ; floating point value, percents or absolute
Shield.SelfHealing.Rate=-1.0                ; floating point value, ingame minutes
Shield.SelfHealing.RestartInCombat=         ; boolean
Shield.SelfHealing.RestartInCombatDelay=-1  ; integer, game frames
Shield.SelfHealing.RestartTimer=false       ; boolean
Shield.AffectTypes=                         ; List of ShieldType names
Shield.Penetrate.Types=                     ; List of ShieldType names
Shield.Break.Types=                         ; List of ShieldType names
Shield.Respawn.Types=                       ; List of ShieldType names
Shield.SelfHealing.Types=                   ; List of ShieldType names
Shield.AttachTypes=                         ; List of ShieldType names
Shield.RemoveTypes=                         ; List of ShieldType names
Shield.ReplaceOnly=false                    ; boolean
Shield.ReplaceNonRespawning=false           ; boolean
Shield.MinimumReplaceDelay=0                ; integer, game frames
Shield.InheritStateOnReplace=false          ; boolean

Now you can have a shield for any TechnoType. It serves as a second health pool with independent Armor and Strength values.

        Shield will not take damage if the TechnoType is under effects of Temporal warhead, is Iron Curtained / Force Shielded, has Immune=true or if it has TypeImmune=true and the damage source is another instance of same TechnoType belonging to same house.

        Negative damage will recover shield, unless shield has been broken. If shield isn’t full, all negative damage will be absorbed by shield.

            Negative damage weapons will consider targets with active, but not at full health shields in need of healing / repairing unless the Warhead has Shield.Penetrate=true, in which case only object health is considered.

        When a TechnoType has an unbroken shield, [ShieldType]->Armor will replace [TechnoType]->Armor for targeting and damage calculation purposes.

            InheritArmorFromTechno can be set to true to override this so that [TechnoType]->Armor is used even if shield is active and [ShieldType]->Armor is ignored.

        InitialStrength can be used to set a different initial strength value from maximum.

    When executing DeploysInto or UndeploysInto, if both of the TechnoTypes have shields, the transformed unit/building would keep relative shield health (in percents), same as with Strength. If one of the TechnoTypes doesn’t have shields, it’s shield’s state on conversion will be preserved until converted back.

        This also works with Ares’ Convert.*.

    Powered controls whether or not the shield is active when a unit is running low on power or it is affected by EMP.

        Attention, if TechnoType itself is not Powered, then the shield won’t be offline when low power.

    AbsorbOverDamage controls whether or not the shield absorbs damage dealt beyond shield’s current strength when the shield breaks.

    SelfHealing and Respawn respect the following settings: 0.0 disables the feature, 1%-100% recovers/respawns the shield strength in percentage, other number recovers/respawns the shield strength directly. Specially, SelfHealing with a negative number deducts the shield strength.

        If you want shield recovers/respawns 1 HP per time, currently you need to set tag value to any number between 1 and 2, like 1.1.

        If SelfHealing.RestartInCombat is set, self-healing timer pauses and then resumes after SelfHealing.RestartInCombatDelay frames have passed when the shield gets damaged.

    SelfHealing.Rate and Respawn.Rate respect the following settings: 0.0 instantly recovers the shield, other values determine the frequency of shield recovers/respawns in ingame minutes.

    IdleAnim, if set, will be played while the shield is intact. This animation is automatically set to loop indefinitely.

        IdleAnim.ConditionYellow and IdleAnim.ConditionRed can be used to set different animations for when shield health is at or below the percentage defined in [AudioVisual]->ConditionYellow/ConditionRed, respectively. If IdleAnim.ConditionRed is not set it falls back to IdleAnim.ConditionYellow, which in turn falls back to IdleAnim.

        IdleAnimDamaged, IdleAnimDamaged.ConditionYellow and IdleAnimDamaged.ConditionRed are used in an identical manner, but only when health of the object the shield is attached to is at or below [AudioVisual]->ConditionYellow. Follows similar fallback sequence to regular IdleAnim variants and if none are set, falls back to the regular IdleAnim or variants thereof.

    IdleAnim.OfflineAction indicates what happens to the animation when the shield is in a low power state.

    IdleAnim.TemporalAction indicates what happens to the animation when the shield is attacked by temporal weapons.

    BreakAnim, if set, will be played when the shield has been broken.

    HitAnim, if set, will be played when the shield is attacked, similar to WeaponNullifyAnim for Iron Curtain.

    BreakWeapon, if set, will be fired at the TechnoType once the shield breaks.

    AbsorbPercent controls the percentage of damage that will be absorbed by the shield. Defaults to 1.0, meaning full damage absorption.

    PassPercent controls the percentage of damage that will not be absorbed by the shield, and will be dealt to the unit directly even if the shield is active. Defaults to 0.0 - no penetration.

    ReceivedDamage.Minimum & ReceivedDamage.Maximum control the minimum and maximum amount of damage that can be dealt to shield in a single hit. This is applied after armor type and AbsorbPercent adjustments. If AbsorbOverDamage=false, the residual damage dealt to the TechnoType is still based on the original damage before the clamping to the range.

    AllowTransfer controls whether or not the shield can be transferred if the TechnoType changes (such as (Un)DeploysInto or Ares type conversion). If not set, defaults to true if shield was attached via Shield.AttachTypes, otherwise false.

    ImmuneToBerserk gives the immunity against Psychedelic=yes warhead. Otherwise the berserk effect penetrates shields by default. Note that this shouldn’t prevent the unit from targeting at the shielded object. Versus.shieldArmor=0% is still required in this case.

    A TechnoType with a shield will show its shield Strength. An empty shield strength bar will be left after destroyed if it is respawnable. Several customizations are available for the shield strength pips.

        By default, buildings use the 6th frame of pips.shp to display the shield strength while others use the 17th frame.

        Pips.Shield can be used to specify which pip frame should be used as shield strength. If only 1 digit is set, then it will always display that frame, or if 3 digits are set, it will use those if shield’s current strength is at or below ConditionYellow and ConditionRed, respectively. Pips.Shield.Building is used for BuildingTypes. -1 as value will use the default frame, whether it is fallback to first value or the aforementioned hardcoded defaults.

        Pips.Shield.Background can be used to set the background or ‘frame’ for non-building pips, which defaults to pipbrd.shp. 4th frame is used to display an infantry’s shield strength and the 3th frame for other units, or 2nd and 1st respectively if not enough frames are available.

        Pips.Shield.Building.Empty can be used to set the frame of pips.shp displayed for empty building strength pips, defaults to 1st frame of pips.shp.

        The above customizations are also available on per ShieldType basis, e.g [ShieldType]->Pips instead of [AudioVisual]->Pips.Shield and so on. ShieldType settings take precedence over the global ones, but will fall back to them if not set.

        BracketDelta can be used as additional vertical offset (negative shifts it up) for shield strength bar. Much like PixelSelectionBracketDelta, it is not applied on buildings.

    Warheads have new options that interact with shields.

        Shield.Penetrate allows the warhead ignore the shield and always deal full damage to the TechnoType itself. It also allows targeting the TechnoType as if shield doesn’t exist.

        Shield.Break allows the warhead to always break shields of TechnoTypes. This is done before damage is dealt.

        Shield.BreakAnim will be displayed instead of ShieldType BreakAnim if the shield is broken by the Warhead, either through damage or Shield.Break.

        Shield.HitAnim will be displayed instead of ShieldType HitAnim if set when Warhead hits the shield.

        Shield.BreakWeapon will be fired instead of ShieldType BreakWeapon if the shield is broken by the Warhead, either through damage or Shield.Break.

        Shield.AbsorbPercent overrides the AbsorbPercent value set in the ShieldType that is being damaged.

        Shield.PassPercent overrides the PassPercent value set in the ShieldType that is being damaged.

        Shield.ReceivedDamage.Minimum & Shield.ReceivedDamage.Maximum override the values set in in the ShieldType that is being damaged.

        Shield.Respawn.Rate & Shield.Respawn.Amount override ShieldType Respawn.Rate and Respawn.Amount for duration of Shield.Respawn.Duration amount of frames. Negative rate & zero or lower amount default to ShieldType values. If Shield.Respawn.RestartTimer is set, currently running shield respawn timer is reset, otherwise the timer’s duration is adjusted in proportion to the new Shield.Respawn.Rate (e.g timer will be same percentage through before and after) without restarting the timer. If the effect expires while respawn timer is running, remaining time is adjusted to proportionally match ShieldType Respawn.Rate. Re-applying the effect resets the duration to Shield.Respawn.Duration

        Shield.SelfHealing.Rate & Shield.SelfHealing.Amount override ShieldType SelfHealing.Rate and SelfHealing.Amount for duration of Shield.SelfHealing.Duration amount of frames. Negative rate & zero or lower amount default to ShieldType values. If Shield.SelfHealing.RestartTimer is set, currently running self-healing timer is restarted, otherwise timer’s duration is adjusted in proportion to the new Shield.SelfHealing.Rate (e.g timer will be same percentage through before and after) without restarting the timer. If the effect expires while self-healing timer is running, remaining time is adjusted to proportionally match ShieldType SelfHealing.Rate. Re-applying the effect resets the duration to Shield.SelfHealing.Duration.

            Additionally Shield.SelfHealing.RestartInCombat & Shield.SelfHealing.RestartInCombatDelay can be used to override ShieldType settings.

        Shield.AffectTypes allows listing which ShieldTypes can be affected by any of the effects listed above. If none are listed, all ShieldTypes are affected.

            Shield.AffectTypes can be overriden for specific shield interactions by using keys Shield.Penetrate.Types, Shield.Break.Types, Shield.Respawn.Types and Shield.SelfHealing.Types respectively.

              If Shield.ReplaceOnly is set, shields from Shield.AttachTypes are only applied to affected targets from which shields were simultaneously removed, matching the order listed in Shield.RemoveTypes. If Shield.AttachTypes contains less items than Shield.RemoveTypes, last item from the former is used for any remaining removed shields.

            If Shield.ReplaceNonRespawning is set, shield from Shield.AttachTypes replaces existing shields that have been broken and cannot respawn on their own.

            Shield.MinimumReplaceDelay can be used to control how long after the shield has been broken (in game frames) can it be replaced. If not enough frames have passed, it won’t be replaced.

            If Shield.InheritStateOnReplace is set, shields replaced via Shield.ReplaceOnly inherit the current strength (relative to ShieldType Strength) of the previous shield and whether or not the shield was currently broken. Self-healing and respawn timers are always reset.



; Counterpart to Iron Curtain
; Formerly ShieldGenerator. 
[UNShieldBattery]
;----- Text -----
UIName				= Name:ShieldGenerator
Name				= Shield Battery
;----- UI -----
BuildCat			= Combat
;----- Availability -----
Owner				= Allies,Americans,British,French,Germans,Italians,Hellenes,Turks,Spaniards,Argentinos,Thais,Filipinos,Australians,Newzealanders,Canadians,Poles_UN,Dutch,Israelis,Saudis
Prerequisite			= UNTechCenter
TechLevel=10
Strength=750
Powered=true
Adjacent=2
Armor=concrete
Sight=4
Nominal=yes
AIBasePlanningSide=0 ;gs 0 for Good, 1 for Evil
Cost=2500
Points=30
Power=-200
Crewed=yes
Capturable=false
Explosion=TWLT070,S_BANG48,S_BRNL58,S_CLSN58,S_TUMU60
MaxDebris=15
MinDebris=5
DebrisAnims=DBRIS1LG,DBRIS1SM,DBRIS2LG,DBRIS4LG,DBRIS4SM,DBRIS5LG,DBRIS5SM,DBRIS6SM,DBRIS7LG,DBRIS7SM
SuperWeapon=ShieldSpecial
ThreatPosed=1 ; This value MUST be 0 for all building addons
AIBuildThis=yes
ProtectWithWall=yes
Spyable=yes
ChargedAnimTime=1
BuildLimit=1
Explodes=yes
DeathWeapon			= ShieldGeneratorExplode


; ProtonShield Generator
[ATFIRE]
UIName				= Name:FireShield
Name				= FireShield Generator
Image				= GAFIRE
DamageParticleSystems=SparkSys,SmallGreySSys,BigGreySmokeSys
Armor				= steel
Owner				= Aztech
TechLevel			= 9
Strength=800
Sight=5
Cost=4000
Points=30
Explosion			= 
Explodes			= yes
DeathWeapon			= 
DamageSmokeOffset=410, 600, 290
MaxDebris=9
Power=-360
Adjacent=4
Capturable			= true
Crewed				= yes
SuperWeapon			= FireShieldSpecial

; Proton Shield Perimeter Defense Node
; This combines the Atlas Laser Fence Post and Atlas Proton Wall section. 
[ATFPDN]
UIName				= Name:FireShield
Name				= FireShield Node
Image				= ATESLA
DamageParticleSystems=SparkSys,LGSparkSys
MaxDebris			= 2
Armor=concrete
Owner				= AzTech
Prerequisite			= ATFIRE
TechLevel			= 9			; 8
Strength			= 300			; 250
Sight				= 10
GuardRange			= 30
Sensors				= yes
Cost				= 800
ThreatPosed=20
Points				= 30
Explosion=TWLT070,S_BANG48,S_BRNL58,S_CLSN58,S_TUMU60
Power				= -25
BaseNormal=no
IsBase=no
TogglePower=no
Powered				= no
